并发:一个时间段内,有几个程序在同一个cpu上运行,但是在任意时刻只有一个程序在cpu上运行
并行:在任意时刻点上,有多个程序同时运行在多个cpu上

同步:指代码调用IO操作时,必须等待IO操作完成才返回的调用方式
异步:指代码调用IO操作时,不必等待IO操作完成才返回的调用方式

阻塞:调用函数时候当前线程被挂起
非阻塞:调用函数时候当前线程不会被挂起,而是立即返回

Unix下五种I/O模型:
阻塞式IO
非阻塞式IO
IO多路复用
信号驱动式IO(使用较少目前)
异步IO

回调之痛:
可读性很差,代码维护性很差
共享状态管理困难
异常处理困难

遇到的问题:
1.回调模式编码复杂度高
2.同步编程并发性不高
3.多线程编程需要线程间同步, lock

1.采用同步的方式去编写异步的代码
2.使用单线程去切换任务
    1.线程是由操作系统切换,单线程切换意味着程序员自己去调度任务
    2.不再需要锁,并发性高,如果单线程内切换函数,性能远高于线程切换,而且并发性更高